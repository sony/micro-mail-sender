services:
  app:
    build:
      context: .
      dockerfile: build/local/app/Dockerfile
    tty: true
    environment: 
      DB_HOST: "postgres"
      MAILSENDER_CONFIG: '{"api-keys":["apikey"]}'
      MAIL_NAME: app
      RELAY_HOST: "[mailhog]:1025"
    volumes:
      - .:/app
    ports:
      - "8333:8333"
    depends_on:
      mailhog:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8333"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "8025:8025"
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /tmp
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=bd9838864bdbbf1c7cd39a0e394c50cd1d0d516c
      - POSTGRES_USER=ms
    volumes:
      - "./build/local/setup-postgres.sh:/docker-entrypoint-initdb.d/setup-postgres.sh"
      - "./build/local/schema.sql:/tmp/schema.sql"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ms", "-d", "mailsender"]
      interval: 10s
      timeout: 5s
      retries: 5
